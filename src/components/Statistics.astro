---
const statistics = [
  {
    id: 'stat-1',
    value: 98,
    label: 'Não fazem gestão financeira completa',
    insight: 'Apenas 2% das empresas têm controle financeiro adequado',
    icon: 'alert-triangle',
    color: {
      primary: 'from-red-500 to-rose-600',
      secondary: 'red-400',
      bg: 'red-500/10',
      border: 'red-500/20'
    },
    delay: 0
  },
  {
    id: 'stat-2',
    value: 64,
    label: 'Usam planilhas e métodos manuais',
    insight: 'Processos antiquados comprometem a eficiência',
    icon: 'file-spreadsheet',
    color: {
      primary: 'from-orange-500 to-amber-600',
      secondary: 'orange-400',
      bg: 'orange-500/10',
      border: 'orange-500/20'
    },
    delay: 200
  },
  {
    id: 'stat-3',
    value: 49,
    label: 'Gastam muito tempo com rotinas financeiras',
    insight: 'Tempo que poderia ser investido no core business',
    icon: 'clock',
    color: {
      primary: 'from-yellow-500 to-orange-500',
      secondary: 'yellow-400',
      bg: 'yellow-500/10',
      border: 'yellow-500/20'
    },
    delay: 400
  },
  {
    id: 'stat-4',
    value: 87,
    label: 'Têm dificuldades nas decisões estratégicas',
    insight: 'Falta de dados precisos limita o crescimento',
    icon: 'trending-down',
    color: {
      primary: 'from-blue-500 to-indigo-600',
      secondary: 'blue-400',
      bg: 'blue-500/10',
      border: 'blue-500/20'
    },
    delay: 600
  }
];
---

<!-- Statistics Section -->
<section class="py-16 lg:py-24 bg-dark-surface relative overflow-hidden">
  <!-- Background Elements -->
  <div class="absolute inset-0 opacity-5">
    <div class="absolute top-0 left-1/4 w-96 h-96 bg-gradient-to-br from-sal-accent/20 to-transparent rounded-full blur-3xl"></div>
    <div class="absolute bottom-0 right-1/4 w-96 h-96 bg-gradient-to-br from-sal-gold/20 to-transparent rounded-full blur-3xl"></div>
  </div>

  <div class="container mx-auto px-6 lg:px-8 relative z-10">
    <div class="max-w-7xl mx-auto">
      <!-- Header -->
      <div class="text-center mb-16">
        <div class="inline-flex items-center gap-2 bg-red-500/10 text-red-400 px-4 py-2 rounded-full text-sm font-medium mb-6">
          <i data-lucide="alert-circle" class="w-4 h-4"></i>
          <span class="font-secondary">Alerta: Situação Crítica</span>
        </div>
                 <h2 class="font-primary font-bold text-3xl lg:text-4xl xl:text-5xl text-dark-text mb-6">
           A Realidade das Empresas
           <span class="block text-sal-gold font-primary">
             Brasileiras
           </span>
         </h2>
        <p class="text-lg lg:text-xl text-dark-text-secondary font-secondary max-w-3xl mx-auto leading-relaxed">
          Pesquisas recentes revelam dados alarmantes sobre a gestão financeira<br class="hidden sm:block"/>
          empresarial no Brasil.
        </p>
      </div>

      <!-- Statistics Grid -->
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 sm:gap-8 mb-16">
        {statistics.map((stat, index) => (
          <div 
            class={`statistic-card group relative bg-gradient-to-br from-dark-card to-dark-surface border border-dark-border hover:border-${stat.color.secondary}/30 rounded-2xl p-6 sm:p-8 transition-all duration-500 hover:shadow-2xl animate-slide-up min-h-[380px] sm:min-h-[420px] flex flex-col justify-between`}
            style={`animation-delay: ${stat.delay}ms`}
            data-stat-id={stat.id}
            data-stat-value={stat.value}
          >
            <!-- Background Glow -->
            <div class={`absolute inset-0 bg-gradient-to-br ${stat.color.primary} opacity-0 group-hover:opacity-5 rounded-2xl transition-opacity duration-500`}></div>
            
            <!-- Content -->
            <div class="relative z-10 flex flex-col h-full">
              <!-- Top Section -->
              <div class="flex-grow">
                <!-- Icon -->
                <div class={`inline-flex items-center justify-center w-16 h-16 rounded-2xl mb-6 group-hover:scale-110 transition-transform duration-300`}
                     style={`background-color: ${stat.color.secondary === 'red-400' ? 'rgba(239, 68, 68, 0.1)' : stat.color.secondary === 'orange-400' ? 'rgba(251, 146, 60, 0.1)' : stat.color.secondary === 'yellow-400' ? 'rgba(250, 204, 21, 0.1)' : stat.color.secondary === 'blue-400' ? 'rgba(96, 165, 250, 0.1)' : 'rgba(156, 163, 175, 0.1)'}; border: 1px solid ${stat.color.secondary === 'red-400' ? 'rgba(239, 68, 68, 0.2)' : stat.color.secondary === 'orange-400' ? 'rgba(251, 146, 60, 0.2)' : stat.color.secondary === 'yellow-400' ? 'rgba(250, 204, 21, 0.2)' : stat.color.secondary === 'blue-400' ? 'rgba(96, 165, 250, 0.2)' : 'rgba(156, 163, 175, 0.2)'}`}>
                  <i data-lucide={stat.icon} class="w-8 h-8"
                     style={`color: ${stat.color.secondary === 'red-400' ? '#f87171' : stat.color.secondary === 'orange-400' ? '#fb923c' : stat.color.secondary === 'yellow-400' ? '#facc15' : stat.color.secondary === 'blue-400' ? '#60a5fa' : stat.color.secondary}`}></i>
                </div>

                <!-- Progress Ring -->
                <div class="relative mb-6 text-center">
                  <svg class="w-24 h-24 mx-auto -rotate-90" viewBox="0 0 100 100">
                    <circle
                      cx="50"
                      cy="50"
                      r="45"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      class="text-dark-border"
                    />
                    <circle
                      cx="50"
                      cy="50"
                      r="45"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      class="progress-ring"
                      style={`stroke-dasharray: 283; stroke-dashoffset: 283; stroke: ${stat.color.secondary === 'red-400' ? '#f87171' : stat.color.secondary === 'orange-400' ? '#fb923c' : stat.color.secondary === 'yellow-400' ? '#facc15' : stat.color.secondary === 'blue-400' ? '#60a5fa' : stat.color.secondary}`}
                      data-progress={stat.value}
                    />
                  </svg>
                  
                  <!-- Percentage -->
                  <div class="absolute inset-0 flex items-center justify-center">
                    <span class="text-2xl lg:text-3xl font-bold counter" data-target={stat.value}
                          style={`color: ${stat.color.secondary === 'red-400' ? '#f87171' : stat.color.secondary === 'orange-400' ? '#fb923c' : stat.color.secondary === 'yellow-400' ? '#facc15' : stat.color.secondary === 'blue-400' ? '#60a5fa' : stat.color.secondary}`}>
                      0
                    </span>
                    <span class="text-xl lg:text-2xl font-bold ml-1"
                          style={`color: ${stat.color.secondary === 'red-400' ? '#f87171' : stat.color.secondary === 'orange-400' ? '#fb923c' : stat.color.secondary === 'yellow-400' ? '#facc15' : stat.color.secondary === 'blue-400' ? '#60a5fa' : stat.color.secondary}`}>%</span>
                  </div>
                </div>

                <!-- Label -->
                <h3 class="font-primary font-semibold text-dark-text text-lg mb-3 leading-tight text-center">
                  {stat.label}
                </h3>

                <!-- Insight Section -->
                <div class="relative">
                  <!-- Reveal Text (Hidden on mobile) -->
                  <p class="hidden md:block text-dark-text-secondary/60 font-secondary text-sm leading-relaxed opacity-100 group-hover:opacity-0 transition-opacity duration-300 text-center italic">
                    Passe o mouse para revelar...
                  </p>
                  
                  <!-- Actual Insight (Always visible on mobile, hover reveal on desktop) -->
                  <p class="text-dark-text-secondary font-secondary text-sm leading-relaxed text-center md:opacity-0 md:group-hover:opacity-100 md:transition-opacity md:duration-300 md:absolute md:inset-0">
                    {stat.insight}
                  </p>
                </div>
              </div>

              <!-- Bottom Section - Impact Bar -->
              <div class="mt-4 h-1 bg-dark-border rounded-full overflow-hidden">
                <div 
                  class={`h-full bg-gradient-to-r ${stat.color.primary} rounded-full impact-bar`}
                  style="width: 0%;"
                  data-width={stat.value}
                ></div>
              </div>
            </div>
          </div>
        ))}
      </div>

             <!-- Solution CTA -->
       <div class="text-center">
         <div class="max-w-sm sm:max-w-md mx-auto px-4 sm:px-0">
           <a 
             href="https://wa.me/5548999277753?text=Olá! Vi os dados sobre gestão financeira e gostaria de saber como a SAL pode ajudar minha empresa a fazer parte dos 2% que fazem gestão profissional."
             target="_blank"
             rel="noopener noreferrer"
             class="group relative inline-flex items-center justify-center gap-2 sm:gap-3 bg-gradient-to-r from-emerald-500 to-emerald-600 hover:from-emerald-600 hover:to-emerald-700 text-white font-primary font-semibold px-6 sm:px-8 py-4 rounded-xl shadow-2xl hover:shadow-emerald-500/25 transition-all duration-300 hover:scale-105 hover:-translate-y-1 w-full text-sm sm:text-base"
           >
             <!-- Background glow effect -->
             <div class="absolute inset-0 bg-gradient-to-r from-emerald-400 to-emerald-500 rounded-xl blur opacity-0 group-hover:opacity-20 transition-opacity duration-300"></div>
                
             <!-- Text -->
             <span class="relative z-10 text-center leading-tight uppercase">
               <span class="hidden sm:inline">Junte-se aos 2% que fazem gestão financeira profissional</span>
               <span class="sm:hidden">Junte-se aos 2%</span>
             </span>
             
             <!-- Arrow indicator -->
             <div class="relative z-10 flex items-center justify-center w-5 h-5 sm:w-6 sm:h-6 ml-1 sm:ml-2">
               <i data-lucide="arrow-right" class="w-4 h-4 sm:w-5 sm:h-5 text-white group-hover:translate-x-1 transition-transform duration-300"></i>
             </div>
           </a>
          
         </div>
       </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize Lucide icons
    setTimeout(function() {
      const lucideGlobal = (window as any).lucide;
      if (lucideGlobal && lucideGlobal.createIcons) {
        lucideGlobal.createIcons();
      }
    }, 100);

    // Intersection Observer for animations
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const card = entry.target;
          
          // Animate counter
          const counter = card.querySelector('.counter');
          if (counter) {
            const target = parseInt(counter.getAttribute('data-target') || '0');
            animateCounter(counter, target);
          }
          
          // Animate progress ring
          const progressRing = card.querySelector('.progress-ring');
          if (progressRing) {
            const progress = parseInt(progressRing.getAttribute('data-progress') || '0');
            animateProgressRing(progressRing, progress);
          }
          
          // Animate impact bar
          const impactBar = card.querySelector('.impact-bar');
          if (impactBar) {
            const width = parseInt(impactBar.getAttribute('data-width') || '0');
            animateImpactBar(impactBar, width);
          }
          
          observer.unobserve(card);
        }
      });
    }, {
      threshold: 0.3,
      rootMargin: '0px 0px -50px 0px'
    });

    // Observe all statistic cards
    document.querySelectorAll('.statistic-card').forEach(card => {
      observer.observe(card);
    });

    // Counter animation
    function animateCounter(element: any, target: number) {
      if (!element || typeof target !== 'number') return;
      
      let current = 0;
      const increment = target / 60; // 60 frames for smooth animation
      const duration = 2000; // 2 seconds
      const stepTime = duration / 60;
      
      const timer = setInterval(() => {
        current += increment;
        if (current >= target) {
          element.textContent = target.toString();
          clearInterval(timer);
        } else {
          element.textContent = Math.floor(current).toString();
        }
      }, stepTime);
    }

    // Progress ring animation
    function animateProgressRing(element: any, progress: number) {
      if (!element || typeof progress !== 'number') return;
      
      const circumference = 2 * Math.PI * 45; // r = 45
      const offset = circumference - (progress / 100) * circumference;
      
      element.style.transition = 'stroke-dashoffset 2s ease-out';
      element.style.strokeDashoffset = offset.toString();
    }

    // Impact bar animation
    function animateImpactBar(element: any, width: number) {
      if (!element || typeof width !== 'number') return;
      
      setTimeout(() => {
        element.style.transition = 'width 1.5s ease-out';
        element.style.width = width + '%';
      }, 500);
    }
  });
</script>

<style>
  .statistic-card {
    backdrop-filter: blur(10px);
  }
  
  .statistic-card:hover {
    transform: translateY(-8px);
  }
  
  .counter {
    font-variant-numeric: tabular-nums;
  }
  
  .progress-ring {
    transition: stroke-dashoffset 2s ease-out;
  }
  
  .impact-bar {
    transition: width 1.5s ease-out;
  }
</style> 